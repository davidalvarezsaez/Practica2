customers find

select c.customername, c.contactfirstname, c.contactlastname, c.customernumber
from customers c
where (c.contactfirstname LIKE 'Mary%') or (c.contactlastname LIKE 'Mary%')
order by c.customernumber;

customer list products

select p.productcode, p.productname, sum(o2.quantityordered)
from customers c, orders o1, orderdetails o2, products p
where c.customernumber = o1.customernumber AND o1.ordernumber = o2.ordernumber AND o2.productcode = p.productcode and c.customernumber = '141'
group by p.productname, p.productcode
order by p.productcode;

customer balance


SELECT tabla1.customernumber, (alreadypaid-yettopay) as balance

FROM (
	 SELECT c.customernumber, sum(p.amount) as alreadypaid 
	 FROM customers c, payments p 
	 WHERE c.customernumber = p.customernumber
	 GROUP BY c.customernumber
)AS tabla1 join (
	SELECT c1.customernumber, sum(o2.quantityordered * o2.priceeach) as yettopay
	FROM  customers c1, orders o1, orderdetails o2
	WHERE c1.customernumber = o1.customernumber AND o1.ordernumber = o2.ordernumber AND c1.customernumber = '141'
	GROUP BY c1.customernumber
	) AS tabla2 
on tabla2.customernumber = tabla1.customernumber;




orders open

SELECT o.ordernumber
from orders o 
where o.shippeddate is NULL;

ORDERDETAILS

tablatonta
SELECT o.orderdate, o.status, sum(o1.quantityordered * o1.priceeach) 
FROM orders o join orderdetails o1 on o.ordernumber = o1.ordernumber
WHERE o.ordernumber = '10100'
GROUP BY o.orderdate, o.status;

tabla normal
SELECT o1.productcode, o1.quantityordered, o1.priceeach 
FROM orders o join orderdetails o1 on o.ordernumber = o1.ordernumber
WHERE o.ordernumber = '10100'
ORDER BY o1.orderlinenumber;


orders range

SELECT o.ordernumber, o.orderdate, o.shippeddate
FROM orders o 
WHERE o.orderdate >= '2003-01-10' AND o.orderdate <= '2003-04-21'
ORDER BY o.ordernumber;

